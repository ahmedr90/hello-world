<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Rock Paper & Scissors</title>
    <link href="https://fonts.googleapis.com/css2?family=Oswald:wght@500&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/3.7.0/animate.min.css">
    <link rel="stylesheet" href="style.css">
</head>
<body>
    <section class="game">
        
        <div class="score fadeOut">
            <div class="player-score">
                <h2>Player</h2>
                <p>0</p>
            </div>
            <div class="computer-score">
                <h2>Computer</h2>
                <p>0</p>
            </div>
        </div>

        <div class="intro">
            <h1 class="animated flipInX slow">Rock Paper and Scissors</h1>
            <button class="animated infinite tada slow">Let's play</button>
        </div>

        <div class="match fadeOut">
            <h2 class="winner">Choose an option</h2>
            <div class="hands">
                <img class="player-hand" src="./assets/Rock.png" alt="Player">
                <img class="computer-hand" src="./assets/Rock.png" alt="Computer">
            </div>

            <div class="options">
                <button class="rock">Rock</button>        
                <button class="paper">Paper</button>
                <button class="scissors">Scissors</button>
            </div>
        </div>

        

    </section>


    <script src="app.js"></script>
</body>
</html>



const game = () => {
    let pScore = 0;
    let cScore = 0;    
    
    //Start the game
    const startGame = () => {
        const playButton = document.querySelector('.intro button');
        const introScreen = document.querySelector('.intro');
        const match = document.querySelector('.match');
        const score = document.querySelector('.score');

        playButton.addEventListener('click', () => {
            introScreen.classList.add('fadeOut');
            match.classList.add('fadeIn');
            score.classList.add('fadeIn');
        });
    }

    //play match
    const playMatch = () => {
        const options = document.querySelectorAll('.options button');
        const playerHand = document.querySelector('.player-hand');
        const computerHand = document.querySelector('.computer-hand');
        const computerOptions = ['Rock', 'Paper', 'Scissors'];
        const hands  = document.querySelectorAll('.hands img');

        hands.forEach(hand => {
            hand.addEventListener('animationend', function() {
                this.style.animation = '';
            })
        })

        options.forEach(option => {
            option.addEventListener('click', function () {
                //Computer choice
                const computerNumber = Math.floor(Math.random() * 3);
                const computerChoice = computerOptions[computerNumber];

                setTimeout(() => {
                    //Calling compare hands function
                    compareHands(this.textContent, computerChoice);
    
                    //Update Images
                    playerHand.src = `./assets/${this.textContent}.png`;
                    computerHand.src = `./assets/${computerChoice}.png`;
                    
                }, 2000);

                //Animation
                playerHand.style.animation = 'shakePlayer 2s ease';
                computerHand.style.animation = 'shakeComputer 2s ease';
                
            });
        });
    }

    const updateScore = () => {
        const playerScore = document.querySelector('.player-score p');
        const computerScore = document.querySelector('.computer-score p');
        playerScore.textContent = pScore;
        computerScore.textContent = cScore;
        
    }

    const compareHands = (playerChoice, computerChoice) => {
        const winner = document.querySelector('.winner');

        //Check for a tie
        if (playerChoice === computerChoice) {
            winner.textContent = 'It is a tie';
            return;
        }

        //Check for rock
        if(playerChoice === 'Rock') {
            if(computerChoice === 'Paper'){
                winner.textContent = 'You lost';
                cScore++;
            } else {
                winner.textContent = 'You won';
                pScore++;
            }
            updateScore();
            return;
        }

        //Check for paper
        if(playerChoice === 'Paper') {
            if(computerChoice === 'Scissors'){
                winner.textContent = 'You lost';
                cScore++;
            } else {
                winner.textContent = 'You won';
                pScore++;
            }
            updateScore();
            return;
        }

        //Check for scissors
        if(playerChoice === 'Scissors') {
            if(computerChoice === 'Rock'){
                winner.textContent = 'You lost';
                cScore++;
            } else {
                winner.textContent = 'You won';
                pScore++;
            }
            updateScore();
            return;
        }
    }

    //Calling all the inner functons
    startGame();
    playMatch();
}

game();

*{
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

section {
    height: 100vh;
    background-color: rgb(118, 82, 201);
    font-family: 'Righteous', cursive;
}

.score {
    color: aliceblue;   
    height: 20vh;
    display: flex;
    justify-content: space-evenly;
    align-items: center;
    transition: 1s ease;
}

.score h2 {
    font-size: 30px;
} 

.score p {
    text-align: center;
    padding: 10px;
    font-size: 25px;
}

.intro {
    color: aliceblue;
    height: 50vh;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: space-around;
    transition: opacity 2s ease;
}

.intro h1 {
    font-size: 80px;
    text-align: center;
}

.intro button {
    width: 280px;
    height: 80px;
    background: none;
    border: none;
    font-size: 60px;
    font-family: 'Righteous', cursive;
    color: rgb(203, 241, 65);
    background: rgb(24, 92, 66);
    border-radius: 8px;
    cursor: pointer;
}

.match {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    transition: opacity 2s ease;
}

.winner {
    color: aliceblue;
    text-align: center;
    font-size: 70px;
}

.hands, .options {
    display: flex;
    justify-content: space-evenly;
    align-items: center; 
}

.options button {
    width: 165px;
    height: 50px;
    background: none;
    border: none;
    font-size: 40px;
    font-family: 'Righteous', cursive;
    color: rgb(203, 241, 65);
    background: rgb(24, 92, 66);
    border-radius: 5px;
    cursor: pointer;
}
.player-hand {
    transform: rotateY(180deg);
}

div.fadeOut {
    opacity: 0;
    pointer-events: none;
}

div.fadeIn {
    opacity: 1;
    pointer-events: all;
}

@keyframes shakePlayer {
    0% {
      transform: rotateY(180deg) translateY(0px);
    }
    15% {
      transform: rotateY(180deg) translateY(-50px);
    }
    25% {
      transform: rotateY(180deg) translateY(0px);
    }
    35% {
      transform: rotateY(180deg) translateY(-50px);
    }
    50% {
      transform: rotateY(180deg) translateY(0px);
    }
    65% {
      transform: rotateY(180deg) translateY(-50px);
    }
    75% {
      transform: rotateY(180deg) translateY(0px);
    }
    85% {
      transform: rotateY(180deg) translateY(-50px);
    }
    100% {
      transform: rotateY(180deg) translateY(0px);
    }
  }
  
  @keyframes shakeComputer {
    0% {
      transform: translateY(0px);
    }
    15% {
      transform: translateY(-50px);
    }
    25% {
      transform: translateY(0px);
    }
    35% {
      transform: translateY(-50px);
    }
    50% {
      transform: translateY(0px);
    }
    65% {
      transform: translateY(-50px);
    }
    75% {
      transform: translateY(0px);
    }
    85% {
      transform: translateY(-50px);
    }
    100% {
      transform: translateY(0px);
    }
  }
  
@media only screen and (max-width: 600px) {
  section {
    width: 100%;
  }
  .intro h1 {
    font-size: 40px;
    text-align: center;
  }

  .intro button {
      width: 140px;
      height: 40px;
      font-size: 30px;
      border-radius: 6px;
  }
  .score {
    color: aliceblue;   
    height: 20vh;
    display: flex;
    justify-content: space-evenly;
    align-items: center;
    transition: 1s ease;
  }

  .score h2 {
      font-size: 20px;
  } 

  .score p {
      font-size: 15px;
  }

  .winner {
    font-size: 40px;
  }
  .options {
    display: flex;
    flex-flow: row wrap;
    justify-content: space-evenly;
    align-items: center;
  }

  .options button {
    width: 50vw;
    height: 40px;
    font-size: 20px;
    margin: 10px 0px;
  }

  img {
    width: 100%;
  }

  .match {
    position: absolute;
    top: 55%;
    left: 50%;
  }

}
